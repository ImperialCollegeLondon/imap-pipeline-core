[project]
requires-python = ">=3.10"
name = "imap-mag"

[tool.poetry]
name = "imap-mag"
version = "0.1.0"
description = "Process IMAP data"
authors = ["alastairtree"]
readme = "README.md"
packages = [
    { include = "src/imap_mag" },
    { include = "src/imap_db" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pyyaml = "^6.0.1"
typing-extensions = "^4.9.0"
pydantic = "^2.6.1"
space-packet-parser = "^4.2.0"
xarray = "^2024.6.0"
numpy = "^2.0.1"
typer = "^0.12.3"
sqlalchemy = "^2.0.31"
psycopg2 = "^2.9.9"
alembic = "^1.13.2"
sqlalchemy-utils = "^0.41.2"
requests = "^2.32.3"
pandas = "^2.2.2"
imap-data-access = "^0.7.0"
astropy = "^6.1.2"
cdflib = "^1.3.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.1"
pytest-cov = "^5.0.0"
pyinstaller = "^6.5.0"
pre-commit = "^3.7.1"
ruff = "^0.5.4"

[tool.poetry.scripts]
# can execute via poetry, e.g. `poetry run imap-mag hello world`
imap-mag = 'src.imap_mag.main:app'
imap-db = 'src.imap_db.main:app'

[tool.pytest.ini_options]
pythonpath = [
  ".", "src"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-pyinstaller-plugin.scripts]
imap-mag = { source = "src/imap_mag/main.py", type = "onefile", bundle = false }

[tool.ruff.lint]
select = [
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "RUF"  # ruff
]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
# Ignore:
#  * Missing docstring in public module, class, method, function, package and __init__
#  * Line too long
#  * Optional replaced as X | None
"*" = ["D100", "D101", "D102", "D103", "D104", "D107", "D202", "E501", "UP007"]
