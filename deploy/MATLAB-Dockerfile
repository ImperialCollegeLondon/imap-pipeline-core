# syntax=docker/dockerfile:1
ARG PYTHON_VERSION="3.12"
ARG USERID=5678
FROM mathworks/matlab:r2024a AS matlab_install

USER root

ARG USERID

#  mpm dependencies
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt-get update \
    && apt-get install --no-install-recommends --yes \
        wget \
        ca-certificates \
    && apt-get clean \
    && apt-get autoremove \
    && rm -rf /var/lib/apt/lists/*

ARG ADDITIONAL_PRODUCTS="Statistics_and_Machine_Learning_Toolbox Control_System_Toolbox Mapping_Toolbox Signal_Processing_Toolbox Curve_Fitting_Toolbox Communications_Toolbox"

ARG MATLAB_CDF_PATCH="https://spdf.gsfc.nasa.gov/pub/software/cdf/dist/latest/matlab/matlab_cdf391_lin64.tar.gz"
ARG MATLAB_MICE="https://naif.jpl.nasa.gov/pub/naif/toolkit//MATLAB/PC_Linux_GCC_MATLAB9.x_64bit/packages/mice.tar.Z"

# Change matlab user id to chosen id so it has the specified access
RUN usermod -u ${USERID} matlab

WORKDIR /tmp
USER matlab
RUN wget -q https://www.mathworks.com/mpm/glnxa64/mpm \
    && chmod +x mpm \
    && EXISTING_MATLAB_LOCATION=$(dirname $(dirname $(readlink -f $(which matlab)))) \
    && sudo HOME=${HOME} ./mpm install \
        --destination=${EXISTING_MATLAB_LOCATION} \
        --release=r2024a \
        --products ${ADDITIONAL_PRODUCTS} \
    || (echo "MPM Installation Failure. See below for more information:" && cat /tmp/mathworks_root.log && false) \
    && sudo rm -rf mpm /tmp/mathworks_root.log

RUN dirname $(dirname $(readlink -f $(which matlab)))

RUN mkdir -p /home/matlab/Documents/MATLAB/Libraries/CDFPatch \
    && wget -q ${MATLAB_CDF_PATCH} -O cdfpatch.tar.gz \
    && tar zxvf cdfpatch.tar.gz -C /home/matlab/Documents/MATLAB/Libraries/CDFPatch \
    && rm cdfpatch.tar.gz

RUN mkdir -p /home/matlab/Documents/MATLAB/Libraries/MICE \
    && wget -q ${MATLAB_MICE} -O mice.tar.gz \
    && tar zxvf mice.tar.gz -C /home/matlab/Documents/MATLAB/Libraries/MICE \
    && rm mice.tar.gz

ARG SRC_DIR="src/matlab"

COPY ${SRC_DIR}/ /home/matlab/Documents/MATLAB/

# For more information, please refer to https://aka.ms/vscode-docker-python

FROM python:${PYTHON_VERSION}-slim AS compile-image

ARG USERID

ARG TOOL_PACKAGE="imap_mag-*.tar.gz"
ARG PYTHON_VERSION
# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# Install the postgres client and any other compile time dependencies needed to build our app
RUN apt-get update && apt-get install -y libpq-dev gcc

# Creates a non-root user with an explicit UID and adds permission to access the /app folder
# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers
RUN adduser -u ${USERID} --disabled-password --gecos "" appuser

USER appuser

# first restore the python dependencies in a single cache layer - should get faster builds as this changes rarely
COPY dist/python${PYTHON_VERSION}/requirements.txt .
RUN python3 -m pip install --user --no-deps -r requirements.txt

# now install the imap-mag package as the user
COPY dist/python${PYTHON_VERSION}/${TOOL_PACKAGE} python${PYTHON_VERSION}/
RUN python3 -m pip install --user python${PYTHON_VERSION}/${TOOL_PACKAGE}

# create the runtime image and copy in the installed packed from compile-image
FROM python:${PYTHON_VERSION}-slim AS runtime-image

ARG USERID

COPY --from=matlab_install /opt/matlab /opt/matlab
COPY --from=matlab_install /home/matlab/Documents/MATLAB /home/matlab/Documents/MATLAB

COPY --from=compile-image /home/appuser/.local /home/appuser/.local
COPY dist/docker /app

RUN apt-get update && apt-get install -y libxt6

RUN adduser -u ${USERID} --disabled-password --gecos "" appuser && \
    chown -R appuser /app && \
    mkdir -p /data && \
    chown -R appuser /data && \
    chown -R appuser /home/appuser && \
    chmod +x /app/example-entrypoint.sh

WORKDIR /app
USER appuser

# Make sure scripts in .local are usable:
ENV PATH="$PATH:/home/appuser/.local/bin:/opt/matlab/R2024a/bin"
ENV PREFECT_HOME=/app/.prefect
ENV PREFECT_PROFILES_PATH=/app/.prefect/profiles.toml

#include the prefect workflows
COPY src/ /app/

#RUN matlab -nojvm -nodesktop -batch "addpath(genpath(\"/home/matlab/Documents/MATLAB\")); savepath"

# Now the imap-mag CLI is available on the path and
# the 3.12 python package for imap-mag is intalled at /home/appuser/.local/bin

# During debugging, this entry point will be overridden. For more information, please refer to https://aka.ms/vscode-docker-python-debug
CMD ["/app/example-entrypoint.sh"]
