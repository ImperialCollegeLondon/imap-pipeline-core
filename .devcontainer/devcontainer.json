// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/debian
{
    "build": {
        "dockerfile": "./Dockerfile",
        "context": "."
    },
    "features": {
        "ghcr.io/gvatsal60/dev-container-features/pre-commit:1": {},
        // allow access to the HOST docker socker for docker desktop
        "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
        "ghcr.io/mathworks/devcontainer-features/matlab:0": {
            "release": "r2024a",
            "products": "MATLAB Statistics_and_Machine_Learning_Toolbox Signal_Processing_Toolbox Curve_Fitting_Toolbox"
        }
        // uncommment act if you want to be able to run github actions locally. This needs "docker in docker" setup for devcontainer
        //"ghcr.io/dhoeric/features/act:1": {}
    },
    "remoteEnv": {
        // add the poetry to the PATH for the dev user vscode
        "PATH": "/home/vscode/.local/bin:${containerEnv:PATH}",
        "IMAP_WEBPODA_TOKEN": "${localEnv:IMAP_WEBPODA_TOKEN}",
        "IMAP_API_KEY": "${localEnv:IMAP_API_KEY}",
        "IALIRT_API_KEY": "${localEnv:IALIRT_API_KEY}",
        "IMAP_DATA_ACCESS_URL": "${localEnv:IMAP_DATA_ACCESS_URL}",
        "IALIRT_DATA_ACCESS_URL": "${localEnv:IALIRT_DATA_ACCESS_URL}",
        "SQLALCHEMY_URL": "${localEnv:SQLALCHEMY_URL}",
        "MLM_LICENSE_FILE": "${localEnv:MLM_LICENSE_FILE}",
        // Define WireMock variables to connect Docker outside of Docker.
        "WIREMOCK_DIND": "1",
        "TESTCONTAINERS_HOST_OVERRIDE": "host.docker.internal"
    },
    "postCreateCommand": "pip install --user -U pre-commit && pre-commit install-hooks && pre-commit autoupdate",
    // install poetry in first startup in vscode
    "postStartCommand": "poetry install",
    // Configure tool-specific properties.
    "customizations": {
        // Configure properties specific to VS Code.
        "vscode": {
            // Set *default* container specific settings.json values on container create.
            "settings": {
                // not using venvs? uncomment this
                //"python.defaultInterpreterPath": "/usr/local/bin/python"
                // use the active venv
                "python.defaultInterpreterPath": ".venv/bin/python",
                // change to zsh default shell
                "terminal.integrated.defaultProfile.linux": "zsh",
                "terminal.integrated.profiles.linux": {
                    "zsh": {
                        "path": "/bin/zsh"
                    }
                }
            },
            "extensions": [
                "EditorConfig.EditorConfig",
                "ms-python.python",
                "ms-python.black-formatter",
                "ms-python.mypy-type-checker",
                "ms-azuretools.vscode-docker",
                "github.vscode-github-actions",
                "charliermarsh.ruff",
                "ms-ossdata.vscode-postgresql",
                "mtxr.sqltools",
                "mtxr.sqltools-driver-pg"
            ]
        }
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Configure tool-specific properties.
    // "customizations": {},
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    "remoteUser": "vscode"
}